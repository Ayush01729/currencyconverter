{"version":3,"sources":["CurrencyRow.jsx","App.js","index.js"],"names":["CurrencyRow","props","currencyoptions","selectedcurrency","onchangecurrency","amount","onchangeamount","type","className","value","onChange","map","option","BASE_URL","App","toamount","fromamount","useState","setCurrencyoptions","fromcurrency","setFromcurrency","tocurrency","setTocurrency","exchangerate","setExchangerate","setAmount","amountinfromcurrency","setAmountinfromcurrency","useEffect","fetch","then","res","json","data","firstcurrency","Object","keys","rates","base","e","target","ReactDOM","render","document","getElementById"],"mappings":"2MAEe,SAASA,EAAYC,GAClC,IACEC,EAKED,EALFC,gBACAC,EAIEF,EAJFE,iBACAC,EAGEH,EAHFG,iBACAC,EAEEJ,EAFFI,OACAC,EACEL,EADFK,eAEF,OACE,gCACE,uBACEC,KAAK,SACLC,UAAU,QACVC,MAAOJ,EACPK,SAAUJ,IAEZ,wBAAQG,MAAON,EAAkBO,SAAUN,EAA3C,SACGF,EAAgBS,KAAI,SAACC,GAAD,OACnB,wBAAqBH,MAAOG,EAA5B,SACGA,GADUA,WChBvB,IAAMC,EACJ,uFAyEaC,MAvEf,WACE,IASIC,EAAUC,EATd,EAA8CC,mBAAS,IAAvD,mBAAOf,EAAP,KAAwBgB,EAAxB,KACA,EAAwCD,qBAAxC,mBAAOE,EAAP,KAAqBC,EAArB,KACA,EAAoCH,qBAApC,mBAAOI,EAAP,KAAmBC,EAAnB,KACA,EAAwCL,qBAAxC,mBAAOM,EAAP,KAAqBC,EAArB,KACA,EAA4BP,mBAAS,GAArC,mBAAOZ,EAAP,KAAeoB,EAAf,KACA,EAAwDR,oBAAS,GAAjE,mBAAOS,EAAP,KAA6BC,EAA7B,KA2CA,OAtCID,GACFV,EAAaX,EACbU,EAAWV,EAASkB,IAEpBR,EAAWV,EACXW,EAAaX,EAASkB,GAGxBK,qBAAU,WACRC,MAAMhB,GACHiB,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,IAAMC,EAAgBC,OAAOC,KAAKH,EAAKI,OAAO,GAC9CnB,EAAmB,CAACe,EAAKK,MAAP,mBAAgBH,OAAOC,KAAKH,EAAKI,UACnDjB,EAAgBa,EAAKK,MACrBhB,EAAcY,GACdV,EAAgBS,EAAKI,MAAMH,SAE9B,IAEHN,qBAAU,WACY,MAAhBT,GAAsC,MAAdE,GAC1BQ,MAAM,GAAD,OAAIhB,EAAJ,iBAAqBM,EAArB,oBAA6CE,IAC/CS,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAUT,EAAgBS,EAAKI,MAAMhB,SAE9C,CAACF,EAAcE,IAahB,qCACE,0CACA,cAACrB,EAAD,CACEE,gBAAiBA,EACjBC,iBAAkBgB,EAClBf,iBAAkB,SAACmC,GAAD,OAAOnB,EAAgBmB,EAAEC,OAAO/B,QAClDJ,OAAQW,EACRV,eAlBN,SAAgCiC,GAC9Bd,EAAUc,EAAEC,OAAO/B,OACnBkB,GAAwB,MAkBtB,qBAAKnB,UAAU,SAAf,eACA,cAACR,EAAD,CACEE,gBAAiBA,EACjBC,iBAAkBkB,EAClBjB,iBAAkB,SAACmC,GAAD,OAAOjB,EAAciB,EAAEC,OAAO/B,QAChDJ,OAAQU,EACRT,eArBN,SAA8BiC,GAC5Bd,EAAUc,EAAEC,OAAO/B,OACnBkB,GAAwB,UCjD5Bc,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.39110ce1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function CurrencyRow(props) {\r\n  const {\r\n    currencyoptions,\r\n    selectedcurrency,\r\n    onchangecurrency,\r\n    amount,\r\n    onchangeamount,\r\n  } = props;\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"number\"\r\n        className=\"input\"\r\n        value={amount}\r\n        onChange={onchangeamount}\r\n      ></input>\r\n      <select value={selectedcurrency} onChange={onchangecurrency}>\r\n        {currencyoptions.map((option) => (\r\n          <option key={option} value={option}>\r\n            {option}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport CurrencyRow from \"./CurrencyRow\";\n\nconst BASE_URL =\n  \"http://api.exchangeratesapi.io/v1/latest?access_key=5b60c8f5657061c4d2148a01babdf385\";\n\nfunction App() {\n  const [currencyoptions, setCurrencyoptions] = useState([]);\n  const [fromcurrency, setFromcurrency] = useState();\n  const [tocurrency, setTocurrency] = useState();\n  const [exchangerate, setExchangerate] = useState();\n  const [amount, setAmount] = useState(1);\n  const [amountinfromcurrency, setAmountinfromcurrency] = useState(true);\n  // console.log(currencyoptions);\n  // console.log(exchangerate);\n\n  let toamount, fromamount;\n  if (amountinfromcurrency) {\n    fromamount = amount;\n    toamount = amount * exchangerate;\n  } else {\n    toamount = amount;\n    fromamount = amount / exchangerate;\n  }\n\n  useEffect(() => {\n    fetch(BASE_URL)\n      .then((res) => res.json())\n      .then((data) => {\n        const firstcurrency = Object.keys(data.rates)[0];\n        setCurrencyoptions([data.base, ...Object.keys(data.rates)]);\n        setFromcurrency(data.base);\n        setTocurrency(firstcurrency);\n        setExchangerate(data.rates[firstcurrency]);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (fromcurrency != null && tocurrency != null) {\n      fetch(`${BASE_URL}&base=${fromcurrency}&symbols=${tocurrency}`)\n        .then((res) => res.json())\n        .then((data) => setExchangerate(data.rates[tocurrency]));\n    }\n  }, [fromcurrency, tocurrency]);\n\n  function handlefromamountchange(e) {\n    setAmount(e.target.value);\n    setAmountinfromcurrency(true);\n  }\n\n  function handletoamountchange(e) {\n    setAmount(e.target.value);\n    setAmountinfromcurrency(false);\n  }\n\n  return (\n    <>\n      <h1>Currency</h1>\n      <CurrencyRow\n        currencyoptions={currencyoptions}\n        selectedcurrency={fromcurrency}\n        onchangecurrency={(e) => setFromcurrency(e.target.value)}\n        amount={fromamount}\n        onchangeamount={handlefromamountchange}\n      />\n      <div className=\"equals\">=</div>\n      <CurrencyRow\n        currencyoptions={currencyoptions}\n        selectedcurrency={tocurrency}\n        onchangecurrency={(e) => setTocurrency(e.target.value)}\n        amount={toamount}\n        onchangeamount={handletoamountchange}\n      />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}